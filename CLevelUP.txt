

===================


===================



===================




===================


i = list(map(int, input().split()))
Total = i[0]
pt = 0

for i in range(i[1]):
  num = int(input())
  if pt >= num:
   pt = pt - num
  else:
   Total = Total - num
   pt = pt + num * 0.1
  print (Total + ' ' + pt)

===================

MAX =''
tmp = []

num = list(map(int, input().split()))
n = num[0]
k = num[1]

log = list(map(int, input().split()))

for i in range(num[0]-num[1]+1):
#  print ('i=',i)   
  for j in range(k-1):
#   print ('j=',j)
   h = i + 1
   total = log[i] + log[h]
   tmp.append(total)
#   print (tmp)
#print (tmp)
#print(max(tmp))
max = max(tmp)
print(str(tmp.count(max)) + ' ' + str(tmp.index(max)+1) )

===================

■Fizz Buzz (paizaランク C 相当)

N = int(input())
for i in range(N):
 num = i + 1
 if num % 3 == 0 and  num % 5 == 0: #3の倍数かつ5の倍数のときには、"Fizz Buzz"
  print ("Fizz Buzz")
 elif num % 3 == 0:
  print ("Fizz")
 elif num % 5 == 0:
  print ("Buzz")
 else: 
  print (num)

===================

■単語のカウント (paizaランク C 相当)

from collections import Counter
s = input().split()
count = Counter(s)  #英単語列に含まれる英単語をカウント

for mykey, myvalue in count.items():
 print(mykey,myvalue)

===================

■検索履歴 (paizaランク C 相当)

list=[]
N = int(input())
for i in range(N):
 flg = 0    
 W = input()
 c = len(list)
 if c >= 1:
  for j in range(c):
    if list[j] == W:
     flg = 1
 if flg == 1:
  list.remove(W) 
 list.insert(0, W)
c = len(list)
for i in range(c):
 print (list[i])

===================

■宝くじ (paizaランク C 相当)

b = int(input())
N = int(input())

if b == 100000:
  ba = b + 1
  bf = ''
elif b == 199999:
  ba = ''
  bf = b - 1
else: 
  ba = b + 1
  bf = b - 1

f = str(b)
fa = str(ba)
ff = str(bf)
sc = f[-4:]
td = f[-3:]

for i in range(N):
  flg = ''
  W = input()
  Wsc = W[-4:]
  Wtd = W[-3:]
  if W == f:
    flg = 'first'
  elif W == fa:
    flg = 'adjacent'
  elif W == ff:
    flg = 'adjacent'
  elif Wsc == sc:
    flg = 'second'
  elif Wtd == td:
    flg = 'third'
  else:
    flg = 'blank'
  print (flg)



===================

■野球の審判 (paizaランク C 相当)

N = int(input())
s = 0
b = 0

for i in range(N):
 W = input()
 if W == 'strike':
   s = s + 1
   if s == 3:
     print ('out!')
   else:
     print ('strike!')
 elif W == 'ball':
   b = b + 1
   if b == 4:
     print ('fourball!')
   else:
     print ('ball!')

===================

■5以上の整数の合計 (paizaランク C 相当)

N = int(input())
sum = 0
for i in range(N):
  a = int(input())
  if a >= 5:
    sum = sum + a

print (sum)

===================

■足すか掛けるか (paizaランク C 相当)

N = int(input())
sum = 0
for i in range(N):
  i = list(map(int, input().split()))
  if i[0] == i[1]:
    sum = sum + (i[0] * i[1])
  else:
    sum = sum + i[0] + i[1]

print (sum)

===================

■文字列を切り取る (paizaランク D 相当)
#ペース区切りの2つの整数と、文字列が入力されるので、
#2つの整数の範囲の部分文字列を出力してください。

i = list(map(int, input().split()))
s = input()

b = i[0] - 1
e = i[1]
print(s[b:e])

===================

■指定範囲だけ大文字 (paizaランク C 相当)
#2つの整数の範囲の部分文字列を、大文字にして出力

i = list(map(int, input().split()))
s = input()
num = len(s)

target = s[i[0] - 1:i[1]]
upper = target.upper()

answer = s[0:i[0] - 1] + upper + s[i[1]:num] 
print (answer)

===================

■文字の重複カウント (paizaランク D 相当)
#1行目の文字が、2行目の文字列の中に何個出現するかをカウントして出力

c = input()
s = input()

print(s.count(c))

===================

■文字列の重複カウント (paizaランク C 相当)



===================

■文字と整数の組のソート
#1行目に行数を表す整数 n、続く n 行の各行で「文字」と「整数」の組が
#空白区切りで入力されます。
#n 個の組を、「整数」の値で昇順に並べ変え、「文字」を出力してください。

# coding: utf-8

my_dict = {}
N = int(input())
for i in range(N):
  key, value = input().split()
  value = int(value)
  my_dict[key] = value

#print(my_dict)

for k, v in sorted(my_dict.items(), key=lambda x: x[1]):
  print(str(k))

===================

■文字と整数の組のソート2 (paizaランク C 相当)
#1行目に行数を表す整数 n、続く n 行の各行で「文字」と「整数」の組が
#空白区切りで入力されます。
#n 個の組について、「文字」の値が同じ組同士の数値を足しわせてまとめ、
#まとめた数値の降順で、文字とまとめた数値の組を出力してください。

my_dict = {}
N = int(input())
for i in range(N):
  key, value = input().split()
  value = int(value)
  flg = key in my_dict
  if flg == True:
    num = my_dict[key]
    value = num + value
  my_dict[key] = value

for k, v in sorted(my_dict.items(),reverse=True,key=lambda x: x[1]):
  print(str(k) + " " + str(v))
  
===================

■文字と整数の組のソート2 (paizaランク C 相当)
#PAIZA解答

#! /usr/local/bin/python3

num = int(input())
inputs = {}
result = {}

for i in range(num):
    tmp = input().split()

    exist = False
    for (key, value) in inputs.items():
        if key == tmp[0]:
            exist = True

    if exist:
        inputs[tmp[0]] = inputs[tmp[0]] + int(tmp[1])
    else:
        inputs[tmp[0]] = int(tmp[1])

# ソート用にkeyとvalueを反転させた辞書を作る
for (key, value) in inputs.items():
    result[value] = key

result = sorted(result.items(), reverse=True)

for i in result:
    print(i[1] + ' ' + str(i[0]))

===================

■アルファベット探し
#1行目の英大文字 X から、2行目の英大文字 Y の範囲に3行目のアルファベット 
#C が含まれていれば"true", そうでなければ"false"と出力してください。
#X が Y よりもアルファベット順で後ろになる場合(X = 'G', Y = 'F'のときなど)も"false"と出力してください。

list = []
flg = ''
for i in range(65,65+26):
 W = chr(i)
 list.append(W)

iX = input()
iY = input()
iC = input()

Xn = list.index(iX)
Yn = list.index(iY)
Cn = list.index(iC)

if Xn > Yn:
  flg = 'false'
else:
  if Cn >= Xn and Cn <=Yn:
    flg = 'true'
  else:
    flg = 'false'

print (flg)

===================

■占い (paizaランク C 相当)

user = {} #名前と血液型の辞書を定義
fort = {} #血液型と占い結果の辞書を定義

#名前と血液型の辞書を作成
N = int(input())
for i in range(N):
  key, value = input().split()
  user[key] = value

#血液型と占い結果の辞書を作成
M = int(input())
for i in range(M):
  key, value = input().split()
  fort[key] = value

#血液型をキーにuser辞書の名前とfort辞書の占い結果を紐づけて出力
for k,v in user.items():
  blood = v
  name  = k
  print (name + ' ' + fort[blood])